Script started on Tue Nov 14 10:10:19 2017
warning: could not update utmp entry
blade57(1)% ls -al
total 80
drwxr-sr-x   2 duojia       4096 Nov 14 10:10 .
drwxrws---   6 duojia       4096 Nov 14 09:43 ..
-rw-r--r--   1 duojia      12866 Nov 14 09:43 Rubric.docx
-rwxr-xr-x   1 duojia      29129 Nov 14 10:09 echo.lnx
-rw-r--r--   1 duojia        202 Nov 14 10:09 echo.opc
-rwxr-xr-x   1 duojia        621 Nov 14 09:43 echo.s
-rw-r--r--   1 duojia       1776 Nov 14 10:09 echo.syms
-rw-r--r--   1 duojia          0 Nov 14 10:10 echo_ulab.script
-rw-r--r--   1 duojia        713 Nov 14 09:43 echoc.c
-rw-r--r--   1 duojia       4011 Nov 14 10:09 echoc.opc
-rw-r--r--   1 duojia       2173 Nov 14 09:43 makefile
lrwxrwxrwx   1 duojia          9 Nov 14 10:09 syms -> echo.syms
blade57(2)% make clean
rm -f *.o *.opc *.syms *.lnx core syms
blade57(3)% make A=echo
/groups/ulab/bin/i386-as -o echo.opc echo.s
/groups/ulab/bin/i386-gcc -g -Wall -Wno-implicit -Wshadow -I/groups/ulab/pcdev/include -c -o echoc.opc echoc.c
/groups/ulab/bin/i386-ld -N -Ttext 1000e0 -o echo.lnx \
        /groups/ulab/pcdev/lib/startup0.opc /groups/ulab/pcdev/lib/startup.opc \
        echoc.opc echo.opc /groups/ulab/pcdev/lib/libc.a
rm -f syms;/groups/ulab/bin/i386-nm -n echo.lnx>echo.syms;ln -s echo.syms syms
blade57(4)% cat echo.s
.text
.globl _echo
_echo:
        pushl %ebp
        movl %esp, %ebp
        subl $8, %esp
        movb 12(%ebp), %bl 
        movl 8(%ebp), %edx 

        xorl %ecx, %ecx
        movb $0xfc, %dl
        inb (%dx), %al
        orb $0x03, %al
        outb %al, (%dx)
        movb $0xfe, %dl  
loop1:
        inb (%dx), %al  
        andb $0xb0, %al  
        xorb $0xb0, %al  
        jnz loop1
loop2:
        movl $0xfd, %dl 
        inb (%dx), %al  
        andb $0x01, %al 
        jz loop2                
        movl $0xf8, %dl 
        inb (%dx), %al  
        movb %al, %al   
        cmpb %cl, %bl
        je return
        movb $0xfd, %dl 
type:
        inb (%dx), %al  
        andb $0x20, %al
        jz loop2                
        movzbl %dl, %eax        
        movl $0xf8, %edx        
        outb %al, (%dx) 
        jmp loop2
return:
        mov %ebp, %esp
        popl %ebp
        ret
        .end
blade57(5)% exit
script done on Tue Nov 14 10:11:56 2017
